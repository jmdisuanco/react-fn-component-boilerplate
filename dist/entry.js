!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("react"),require("react-dom"));else if("function"==typeof define&&define.amd)define(["React","ReactDOM"],t);else{var n="object"==typeof exports?t(require("react"),require("react-dom")):t(e.React,e.ReactDOM);for(var r in n)("object"==typeof exports?exports:e)[r]=n[r]}}(window,function(e,t){return function(e){function t(t){for(var n,o,a=t[0],u=t[1],i=0,s=[];i<a.length;i++)o=a[i],r[o]&&s.push(r[o][0]),r[o]=0;for(n in u)Object.prototype.hasOwnProperty.call(u,n)&&(e[n]=u[n]);for(c&&c(t);s.length;)s.shift()()}var n={},r={0:0};function o(t){if(n[t])return n[t].exports;var r=n[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.e=function(e){var t=[],n=r[e];if(0!==n)if(n)t.push(n[2]);else{var a=new Promise(function(t,o){n=r[e]=[t,o]});t.push(n[2]=a);var u,i=document.createElement("script");i.charset="utf-8",i.timeout=120,o.nc&&i.setAttribute("nonce",o.nc),i.src=function(e){return o.p+""+{1:"88bc09fd5194502a9d31",2:"37339f17fa4e8ed3e5a5",3:"6991fd81817c0bc2d67f",4:"70296b0d895f27fb7791"}[e]+".bundle.js"}(e);var c=new Error;u=function(t){i.onerror=i.onload=null,clearTimeout(s);var n=r[e];if(0!==n){if(n){var o=t&&("load"===t.type?"missing":t.type),a=t&&t.target&&t.target.src;c.message="Loading chunk "+e+" failed.\n("+o+": "+a+")",c.name="ChunkLoadError",c.type=o,c.request=a,n[1](c)}r[e]=void 0}};var s=setTimeout(function(){u({type:"timeout",target:i})},12e4);i.onerror=i.onload=u,document.head.appendChild(i)}return Promise.all(t)},o.m=e,o.c=n,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="/dist/",o.oe=function(e){throw console.error(e),e};var a=window.webpackJsonp=window.webpackJsonp||[],u=a.push.bind(a);a.push=t,a=a.slice();for(var i=0;i<a.length;i++)t(a[i]);var c=u;return o(o.s=4)}([function(t,n){t.exports=e},function(e,t,n){"use strict";var r=n(0),o=Object(r.createContext)(null);t.a=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),o=Object.prototype.hasOwnProperty,a=Array.prototype.splice,u=Object.prototype.toString;function i(e){return u.call(e).slice(8,-1)}var c=Object.assign||function(e,t){return s(t).forEach(function(n){o.call(t,n)&&(e[n]=t[n])}),e},s="function"==typeof Object.getOwnPropertySymbols?function(e){return Object.keys(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.keys(e)};function f(e){return Array.isArray(e)?c(e.constructor(e.length),e):"Map"===i(e)?new Map(e):"Set"===i(e)?new Set(e):e&&"object"==typeof e?c(Object.create(Object.getPrototypeOf(e)),e):e}var p=function(){function e(){this.commands=c({},l),this.update=this.update.bind(this),this.update.extend=this.extend=this.extend.bind(this),this.update.isEquals=function(e,t){return e===t},this.update.newContext=function(){return(new e).update}}return Object.defineProperty(e.prototype,"isEquals",{get:function(){return this.update.isEquals},set:function(e){this.update.isEquals=e},enumerable:!0,configurable:!0}),e.prototype.extend=function(e,t){this.commands[e]=t},e.prototype.update=function(e,t){var n=this,a="function"==typeof t?{$apply:t}:t;Array.isArray(e)&&Array.isArray(a)||r(!Array.isArray(a),"update(): You provided an invalid spec to update(). The spec may not contain an array except as the value of $set, $push, $unshift, $splice or any custom command allowing an array value."),r("object"==typeof a&&null!==a,"update(): You provided an invalid spec to update(). The spec and every included key path must be plain objects containing one of the following commands: %s.",Object.keys(this.commands).join(", "));var u=e;return s(a).forEach(function(t){if(o.call(n.commands,t)){var r=e===u;u=n.commands[t](a[t],u,a,e),r&&n.isEquals(u,e)&&(u=e)}else{var c="Map"===i(e)?n.update(e.get(t),a[t]):n.update(e[t],a[t]),s="Map"===i(u)?u.get(t):u[t];n.isEquals(c,s)&&(void 0!==c||o.call(e,t))||(u===e&&(u=f(e)),"Map"===i(u)?u.set(t,c):u[t]=c)}}),u},e}();t.Context=p;var l={$push:function(e,t,n){return y(t,n,"$push"),e.length?t.concat(e):t},$unshift:function(e,t,n){return y(t,n,"$unshift"),e.length?e.concat(t):t},$splice:function(e,t,n,o){return function(e,t){r(Array.isArray(e),"Expected $splice target to be an array; got %s",e),b(t.$splice)}(t,n),e.forEach(function(e){b(e),t===o&&e.length&&(t=f(o)),a.apply(t,e)}),t},$set:function(e,t,n){return function(e){r(1===Object.keys(e).length,"Cannot have more than one key in an object with $set")}(n),e},$toggle:function(e,t){h(e,"$toggle");var n=e.length?f(t):t;return e.forEach(function(e){n[e]=!t[e]}),n},$unset:function(e,t,n,r){return h(e,"$unset"),e.forEach(function(e){Object.hasOwnProperty.call(t,e)&&(t===r&&(t=f(r)),delete t[e])}),t},$add:function(e,t,n,r){return v(t,"$add"),h(e,"$add"),"Map"===i(t)?e.forEach(function(e){var n=e[0],o=e[1];t===r&&t.get(n)!==o&&(t=f(r)),t.set(n,o)}):e.forEach(function(e){t!==r||t.has(e)||(t=f(r)),t.add(e)}),t},$remove:function(e,t,n,r){return v(t,"$remove"),h(e,"$remove"),e.forEach(function(e){t===r&&t.has(e)&&(t=f(r)),t.delete(e)}),t},$merge:function(e,t,n,o){var a,u;return a=t,r((u=e)&&"object"==typeof u,"update(): $merge expects a spec of type 'object'; got %s",u),r(a&&"object"==typeof a,"update(): $merge expects a target of type 'object'; got %s",a),s(e).forEach(function(n){e[n]!==t[n]&&(t===o&&(t=f(o)),t[n]=e[n])}),t},$apply:function(e,t){var n;return r("function"==typeof(n=e),"update(): expected spec of $apply to be a function; got %s.",n),e(t)}},d=new p;function y(e,t,n){r(Array.isArray(e),"update(): expected target of %s to be an array; got %s.",n,e),h(t[n],n)}function h(e,t){r(Array.isArray(e),"update(): expected spec of %s to be an array; got %s. Did you forget to wrap your parameter in an array?",t,e)}function b(e){r(Array.isArray(e),"update(): expected spec of $splice to be an array of arrays; got %s. Did you forget to wrap your parameters in an array?",e)}function v(e,t){var n=i(e);r("Map"===n||"Set"===n,"update(): %s expects a target of type Set or Map; got %s",t,n)}t.isEquals=d.update.isEquals,t.extend=d.extend,t.default=d.update,t.default.default=e.exports=c(t.default,t)},function(e,t,n){"use strict";e.exports=function(e,t,n,r,o,a,u,i){if(!e){var c;if(void 0===t)c=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var s=[n,r,o,a,u,i],f=0;(c=new Error(t.replace(/%s/g,function(){return s[f++]}))).name="Invariant Violation"}throw c.framesToPop=1,c}}},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),a=n(1),u=n(2),i=n.n(u);function c(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=[],r=!0,o=!1,a=void 0;try{for(var u,i=e[Symbol.iterator]();!(r=(u=i.next()).done)&&(n.push(u.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==i.return||i.return()}finally{if(o)throw a}}return n}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var s={App:function(e){var t=e.uState,n=c(Object(r.useState)(t),2),u=n[0],s=n[1];return o.a.createElement(a.a.Provider,{value:[u,function(e){s(i()(u,{$set:e}))}]},e.children)},Components:{Display:Object(r.lazy)(function(){return n.e(1).then(n.bind(null,318))}),ControlPad:Object(r.lazy)(function(){return n.e(3).then(n.bind(null,317))}),SliderPad:Object(r.lazy)(function(){return n.e(2).then(n.bind(null,316))}),DisplayAnimation:Object(r.lazy)(function(){return n.e(4).then(n.bind(null,319))})}};t.default=s},function(e,n){e.exports=t}])});